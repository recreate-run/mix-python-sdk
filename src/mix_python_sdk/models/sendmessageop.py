"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .messagedata import MessageData, MessageDataTypedDict
from .resterror import RESTError, RESTErrorTypedDict
from mix_python_sdk.types import BaseModel
from mix_python_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SendMessageRequestBodyTypedDict(TypedDict):
    content: str
    r"""Message content to send"""


class SendMessageRequestBody(BaseModel):
    content: str
    r"""Message content to send"""


class SendMessageRequestTypedDict(TypedDict):
    id: str
    r"""Session ID"""
    request_body: SendMessageRequestBodyTypedDict


class SendMessageRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Session ID"""

    request_body: Annotated[
        SendMessageRequestBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class SendMessageResponseTypedDict(TypedDict):
    r"""Message sent and processed"""

    data: NotRequired[MessageDataTypedDict]
    error: NotRequired[RESTErrorTypedDict]
    message: NotRequired[str]
    r"""Optional message"""


class SendMessageResponse(BaseModel):
    r"""Message sent and processed"""

    data: Optional[MessageData] = None

    error: Optional[RESTError] = None

    message: Optional[str] = None
    r"""Optional message"""
