"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .resterror import RESTError, RESTErrorTypedDict
from mix_python_sdk.types import BaseModel
from mix_python_sdk.utils import FieldMetadata, PathParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetCommandRequestTypedDict(TypedDict):
    name: str
    r"""Command name"""


class GetCommandRequest(BaseModel):
    name: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Command name"""


class GetCommandDataTypedDict(TypedDict):
    description: NotRequired[str]
    r"""Command description"""
    name: NotRequired[str]
    r"""Command name"""
    usage: NotRequired[str]
    r"""Command usage instructions"""


class GetCommandData(BaseModel):
    description: Optional[str] = None
    r"""Command description"""

    name: Optional[str] = None
    r"""Command name"""

    usage: Optional[str] = None
    r"""Command usage instructions"""


class GetCommandResponseTypedDict(TypedDict):
    r"""Command details"""

    data: NotRequired[GetCommandDataTypedDict]
    error: NotRequired[RESTErrorTypedDict]
    message: NotRequired[str]
    r"""Optional message"""


class GetCommandResponse(BaseModel):
    r"""Command details"""

    data: Optional[GetCommandData] = None

    error: Optional[RESTError] = None

    message: Optional[str] = None
    r"""Optional message"""
