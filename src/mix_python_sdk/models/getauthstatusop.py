"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mix_python_sdk.types import BaseModel
from typing import Dict, Literal, Optional
from typing_extensions import NotRequired, TypedDict


GetAuthStatusAuthMethod = Literal[
    "oauth",
    "api_key",
    "none",
]
r"""Authentication method (oauth, api_key, none)"""


class ProvidersTypedDict(TypedDict):
    auth_method: NotRequired[GetAuthStatusAuthMethod]
    r"""Authentication method (oauth, api_key, none)"""
    authenticated: NotRequired[bool]
    r"""Whether provider is authenticated"""
    display_name: NotRequired[str]
    r"""User-friendly provider name"""


class Providers(BaseModel):
    auth_method: Optional[GetAuthStatusAuthMethod] = None
    r"""Authentication method (oauth, api_key, none)"""

    authenticated: Optional[bool] = None
    r"""Whether provider is authenticated"""

    display_name: Optional[str] = None
    r"""User-friendly provider name"""


class GetAuthStatusResponseTypedDict(TypedDict):
    r"""Authentication status for all providers"""

    providers: NotRequired[Dict[str, ProvidersTypedDict]]
    r"""Map of provider authentication status"""


class GetAuthStatusResponse(BaseModel):
    r"""Authentication status for all providers"""

    providers: Optional[Dict[str, Providers]] = None
    r"""Map of provider authentication status"""
