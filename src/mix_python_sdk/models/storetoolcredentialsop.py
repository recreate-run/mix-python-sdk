"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mix_python_sdk.types import BaseModel
from typing import Literal, Optional
from typing_extensions import NotRequired, TypedDict


ToolType = Literal[
    "web_search",
    "multimodal_analyzer",
]
r"""Tool category type"""


class StoreToolCredentialsRequestTypedDict(TypedDict):
    api_key: str
    r"""API key for authentication"""
    provider: str
    r"""Tool provider name (e.g., brave, gemini)"""
    tool_type: ToolType
    r"""Tool category type"""


class StoreToolCredentialsRequest(BaseModel):
    api_key: str
    r"""API key for authentication"""

    provider: str
    r"""Tool provider name (e.g., brave, gemini)"""

    tool_type: ToolType
    r"""Tool category type"""


class StoreToolCredentialsResponseTypedDict(TypedDict):
    r"""Tool API key stored successfully"""

    message: NotRequired[str]
    r"""Success message"""
    provider: NotRequired[str]
    r"""Tool provider name"""
    status: NotRequired[str]
    r"""Operation status (success)"""
    tool_type: NotRequired[str]
    r"""Tool category type"""


class StoreToolCredentialsResponse(BaseModel):
    r"""Tool API key stored successfully"""

    message: Optional[str] = None
    r"""Success message"""

    provider: Optional[str] = None
    r"""Tool provider name"""

    status: Optional[str] = None
    r"""Operation status (success)"""

    tool_type: Optional[str] = None
    r"""Tool category type"""
