"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from mix_python_sdk.types import BaseModel
from mix_python_sdk.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetSessionFileRequestTypedDict(TypedDict):
    id: str
    r"""Session ID"""
    filename: str
    r"""Filename to retrieve"""
    thumb: NotRequired[str]
    r"""Thumbnail specification: '100' (box), 'w100' (width), 'h100' (height)"""
    time: NotRequired[float]
    r"""Time offset in seconds for video thumbnails (default: 1.0)"""


class GetSessionFileRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Session ID"""

    filename: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Filename to retrieve"""

    thumb: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Thumbnail specification: '100' (box), 'w100' (width), 'h100' (height)"""

    time: Annotated[
        Optional[float],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Time offset in seconds for video thumbnails (default: 1.0)"""


GetSessionFileResponseTypedDict = TypeAliasType(
    "GetSessionFileResponseTypedDict", Union[httpx.Response, httpx.Response]
)


GetSessionFileResponse = TypeAliasType(
    "GetSessionFileResponse", Union[httpx.Response, httpx.Response]
)
