"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from mix_python_sdk.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class ParametersTypedDict(TypedDict):
    r"""Tool parameter schema"""


class Parameters(BaseModel):
    r"""Tool parameter schema"""


class ListLLMToolsToolTypedDict(TypedDict):
    description: NotRequired[str]
    r"""Tool description"""
    name: NotRequired[str]
    r"""Tool name"""
    parameters: NotRequired[ParametersTypedDict]
    r"""Tool parameter schema"""
    required: NotRequired[List[str]]
    r"""Required parameters"""


class ListLLMToolsTool(BaseModel):
    description: Optional[str] = None
    r"""Tool description"""

    name: Optional[str] = None
    r"""Tool name"""

    parameters: Optional[Parameters] = None
    r"""Tool parameter schema"""

    required: Optional[List[str]] = None
    r"""Required parameters"""


class ListLLMToolsResponseTypedDict(TypedDict):
    r"""List of LLM tools"""

    tools: NotRequired[List[ListLLMToolsToolTypedDict]]


class ListLLMToolsResponse(BaseModel):
    r"""List of LLM tools"""

    tools: Optional[List[ListLLMToolsTool]] = None
