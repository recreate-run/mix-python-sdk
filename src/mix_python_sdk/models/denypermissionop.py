"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .resterror import RESTError, RESTErrorTypedDict
from mix_python_sdk.types import BaseModel
from mix_python_sdk.utils import FieldMetadata, PathParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DenyPermissionRequestTypedDict(TypedDict):
    id: str
    r"""Permission ID"""


class DenyPermissionRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Permission ID"""


class DenyPermissionDataTypedDict(TypedDict):
    denied: NotRequired[bool]
    r"""Whether permission was denied"""


class DenyPermissionData(BaseModel):
    denied: Optional[bool] = None
    r"""Whether permission was denied"""


class DenyPermissionResponseTypedDict(TypedDict):
    r"""Permission deny status"""

    data: NotRequired[DenyPermissionDataTypedDict]
    error: NotRequired[RESTErrorTypedDict]
    message: NotRequired[str]
    r"""Optional message"""


class DenyPermissionResponse(BaseModel):
    r"""Permission deny status"""

    data: Optional[DenyPermissionData] = None

    error: Optional[RESTError] = None

    message: Optional[str] = None
    r"""Optional message"""
